<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/aop       
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 自动扫描与装配bean -->
	<context:annotation-config />
	<context:component-scan base-package="sz.lzh.conversation"></context:component-scan>
	<!-- 导入外部的properties文件 -->
	<context:property-placeholder location="classpath:config.properties" />
	<!-- 配置c3p0数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 数据连接信息 -->
		<property name="jdbcUrl"
			value="jdbc:mysql://${dataAddress}:${dataPort}/${database}?useUnicode=true&amp;characterEncoding=UTF8" />
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="user" value="${dataUsername}"></property>
		<property name="password" value="${dataPassword}"></property>
		<!-- 其他配置 -->
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="3"></property>
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="3"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="1000"></property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5"></property>
		<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
			0 -->
		<property name="maxStatements" value="8"></property>
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="5"></property>
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="20"></property>

	</bean>

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- hibernate配置属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.dynamic-insert">true</prop>
      			<prop key="hibernate.dynamic-update">true</prop>
			</props>
		</property>
		<!-- <beans:property name="annotatedClasses"> <beans:list> <beans:value>zzx.imooc.modle.Animal</beans:value> 
			</beans:list> </beans:property> -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	</bean>

	<!-- 配置声明式事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
		
		   <!--jedis的连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲连接数量 -->
        <property name="maxIdle" value="1000"/>
        <!-- 最小空闲连接数量, 处理间隔时间为 timeBetweenEvictionRunsMillis -->
        <property name="minIdle" value="10"/>
        <!-- 池中持有的最大连接数量 -->
        <property name="maxTotal" value="100000"/>
        <!-- borrowObject 方法的最大等待时间 -->
        <property name="maxWaitMillis" value="100000"/>
        <!-- 池中可用资源耗尽时, borrow 方法是否阻塞等待 maxWaitMillis 毫秒 -->
        <property name="blockWhenExhausted" value="true"/>
        <!-- borrowObject 时是否执行检测 -->
        <property name="testOnBorrow" value="true"/>
        <!-- 是否检测空闲连接链接的有效性, 间隔时间为 timeBetweenEvictionRunsMillis -->
        <property name="testWhileIdle" value="true"/>
        <!-- 空闲对象被清除需要达到的最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="100"/>
    </bean>
    <!-- jedis的连接工厂 -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${cacheAddress}"/>
        <property name="port" value="${cachePort}"/>
        <property name="database" value="${cacheDatabase}"/>
        <property name="password" value="${cachePassword}"/>
        <property name="timeout" value="2000"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
</beans>


